
NATIVE_ENABLED = true
BYTE_ENABLED = true
OCAMLOPTFLAGS = -inline 100
USE_OCAMLFIND = true

OCAMLFLAGS = -thread -w A
OCAMLCFLAGS += -g -annot

OCAMLPACKS[] =
    csv
    lwt
    lwt.unix
    lwt.syntax
    threads
    estring
    batteries
    unix
    str
    sqlite3
    sqlexpr
    sqlexpr.syntax
    camlp4.macro
    threads
    lwt_comm

section
    OCAML_LIBS[] += ocamlmq
    OCamlProgram(ocamlmq, ocamlmq)

OCAMLFINDFLAGS += -syntax camlp4o

OBJECTS[] =
    binlog
    extSet
    mq_types
    mq_stomp
    mq_server
    mq_sqlite_persistence
    ternary

section
    OCAMLFLAGS += -w -4-27-32
    $(addsuffixes .cmi .cmx .cmo .o, mq_sqlite_persistence):

OCamlLibrary(ocamlmq, $(OBJECTS))

section
    OCAMLPACKS[] += oUnit
    TEST_FILES[] = $(removesuffix $(ls test*ml))
    OCamlProgram(test, $(OBJECTS) $(TEST_FILES) test)
    $(addsuffixes .cmi .cmo .cmx .o, $(TEST_FILES) test):

MQ_LIB = $(addsuffixes .cma .cmxa .a, ocamlmq)
INSTALL_CMIS[] = $(addsuffix .cmi, $(OBJECTS))
INSTALL_FILES[] = META $(INSTALL_CMIS) $(MQ_LIB)

.DEFAULT: ocamlmq$(EXE) $(MQ_LIB)

.PHONY: install
install: META ocamlmq$(EXE) $(INSTALL_FILES)
	ocamlfind install ocamlmq $(INSTALL_FILES)

.PHONY: remove
remove: META
	ocamlfind remove ocamlmq

.PHONY: clean

clean:
	rm -f $(filter-proper-targets $(ls R, .)) *.s
